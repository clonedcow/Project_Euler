import java.util.*;

public class MyClass {
    public static void main(String args[]) {
      genPrimes(100);

      List<Integer> pows = List.of(3,3,2,2,1,1,1,1,1,1,1,1);
      calcSolutions(pows);
    }
    
    private static void calcSolutions(List<Integer> pows) {
        long num = 1;
        long solutions = 1;
        
        for(int i = 0; i<pows.size(); i++) {
            int prime = primes.get(i);
            int pow = pows.get(i);
            num*=pow(prime, pow);
            solutions*=(pow*2+1);
        }
        
        System.out.println(primes);
        System.out.println(pows);
        System.out.println("num=" + num +", solutions=" + (solutions+1)/2);
    }
    
    
    static List<Integer> primes;
    static Set<Integer> primeSet;
    
    private static void genPrimes(int maxPrime) {
        primes = new ArrayList<>();
        primeSet = new HashSet<>();
        boolean[] isComposite = new boolean[maxPrime+1];
    
        for(int testPrime = 2; testPrime<=maxPrime; testPrime++) {
            if(!isComposite[testPrime]) {
                primes.add(testPrime);
                primeSet.add(testPrime);
                for(long marker = (long)testPrime*(long)testPrime; marker<=maxPrime; marker+=testPrime) {
                    isComposite[(int)marker] = true;
                }
            }
        }
    }
    
    private static long pow(long base, int exp) {
        int mask = 0b1000000000000000000000000000000;
        long ans = 1;
        do {
            ans = ans * ans;
            if((mask&exp) != 0) {
                ans*= base;
            }
            mask>>>=1;
        } while(mask!=0);
    
        return ans;
    }
}
